#!/usr/bin/env bash

# Check if ExifTool config file exists, bail if not
if [ ! -f "$HOME/.ExifTool_config" ]; then
    echo "ExifTool config file at $HOME/.ExifTool_config does not exist, exiting"
    exit 1
fi

# Set the path to the folder containing the JPG image scans
folder_path="${1}"

# Set the desired metadata values loaded from exif.txt
exif_file="${folder_path}/exif.txt"
if [ -e "$exif_file" ]; then
    while IFS='=' read -r key value; do
        case "$key" in
            Camera)
                # Split the Camera value into make and model
                IFS=' ' read -r camera_make camera_model <<< "$value"
                ;;
            Lens)
                lens="$value"
                ;;
            Film)
                film_stock="$value"
                ;;
            ISO)
                film_iso="$value"
                ;;
            Location)
                location="$value"
                ;;
            MajorityShotDate)
                if [[ "$value" =~ ^([0-9]{4})/([0-9]{2})/([0-9]{2})$ ]]; then
                    year="${BASH_REMATCH[1]}"
                    month="${BASH_REMATCH[2]}"
                    day="${BASH_REMATCH[3]}"
                    date="$year:$month:$day 00:XX:00"
                else
                    # If the input doesn't match, set all fields to "0"
                    date="0000:00:00 00:00:00"
                fi
                ;;
            Developed)
                developed_by="$value"
                ;;
            DevelopedDate)
                if [[ "$value" =~ ^([0-9]{4})/([0-9]{2})/([0-9]{2})$ ]]; then
                    year="${BASH_REMATCH[1]}"
                    month="${BASH_REMATCH[2]}"
                    day="${BASH_REMATCH[3]}"
                    developed_date="$year:$month:$day 00:00:00"
                else
                    # If the input doesn't match, set all fields to "0"
                    developed_date="0000:00:00 00:00:00"
                fi
                ;;
            *)
                # Handle any other fields here, if needed
                ;;
        esac
    done < "${exif_file}"
else
    echo "File containing EXIF data ${exif_file} not found."
    exit
fi

roll_num=$(basename "${folder_path}" | sed 's/^0*//')

file_counter=0
# Loop through each JPG file in the folder
for file in "$folder_path"/*.jpg; do
    ((file_counter++))
    # Use exiftool to extract the scanner make and model
    scanner_make=$(exiftool -s -s -s -Make "$file")
    scanner_model=$(exiftool -s -s -s -Model "$file")

    # Replace scanner make and model with camera make and model
    exiftool -overwrite_original \
        -Make="$camera_make" \
        -Model="$camera_model" \
        "$file"

    # Set the additional metadata tags
    # Additional / non-standard fields from https://github.com/thetestspecimen/film-exif
    exiftool -m -overwrite_original \
        -Lens="$lens" \
        -Location="$location" \
        -XMP-AnalogueData:FilmStock="$film_stock" \
        -XMP-AnalogueData:FilmFormat="35mm" \
        -XMP-AnalogueData:FilmDeveloper="Unknown" \
        -XMP-AnalogueData:FilmProcessLab="$developed_by" \
        -XMP-AnalogueData:FilmScanner="$scanner_make $scanner_model" \
        -XMP-AnalogueData:FilmProcessedDate="$developed_date" \
        -XMP-AnalogueData:RollNum="$roll_num" \
        -ISO="$film_iso" \
        -DateTimeOriginal="${date/XX/$file_counter}" \
        "$file"
done

echo "Metadata extraction, modification, and tagging complete!"

